- name: Bootstrap development environment
  hosts: localhost

  tasks:

  - name: Set os family env variable
    set_fact:
      os_family: "{{ 'debian' if ansible_facts['os_family'] == 'Debian' else 'osx' if ansible_facts['os_family'] == 'Darwin' else 'common' }}"

  # ----------- Setup zsh -----------

  - name: Install zsh
    ansible.builtin.package:
      name: zsh
      state: present

  - name: Change default shell to zsh
    ansible.builtin.command: chsh -s /usr/bin/zsh

  - name: Create .zshrc if not exist
    ansible.builtin.file:
      path: ~/.zshrc
      state: touch

  # ----------- Setup git -----------

  - name: Install git
    become: yes
    ansible.builtin.apt:
      name:
        - git
        - curl
      state: present
    when: ansible_facts['os_family'] == "Debian"

  - name: Check if Homebrew is installed
    ansible.builtin.command: brew --version
    register: brew_installed
    ignore_errors: yes
    when: ansible_facts['os_family'] == "Darwin"

  - name: Install Homebrew on macOS if not present
    ansible.builtin.shell: |
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    when: brew_installed.rc != 0 and ansible_facts['os_family'] == "Darwin"
    when: ansible_facts['os_family'] == "Darwin"

  - name: Install Git using Homebrew
    ansible.builtin.homebrew:
      name: git
      state: present
    when: ansible_facts['os_family'] == "Darwin"

  # ----------- Setup rust -----------

  - name: Check rust if already installed
    ansible.builtin.shell: which cargo
    register: cargo_check
    ignore_errors: true
    args:
      executable: /bin/zsh

  - name: Install rustup
    become: yes
    ansible.builtin.shell: |
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    when: cargo_check.rc != 0

  - name: Set rustup stable version
    become: yes
    ansible.builtin.shell: |
      . $HOME/.cargo/env
      rustup override set stable
      rustup update stable
    when: cargo_check.rc != 0

  - name: Update rust path variable
    ansible.builtin.lineinfile:
      path: ~/.zshrc
      line: 'export PATH="$HOME/.cargo/bin:$PATH"'
      state: present

  # ----------- Setup Alacritty terminal -----------

  - name: Check alacritty if already installed
    command: which alacritty
    register: alacritty_check
    ignore_errors: true

  - name: Setup alacritty 0.14.0 repository
    become: yes
    ansible.builtin.git:
      repo: https://github.com/alacritty/alacritty.git
      dest: /opt/alacritty
      version: "d021a7b6"
    when: alacritty_check.rc != 0

  - name: Install alacritty
    include_tasks: "scripts/{{os_family}}/alacritty.yaml"
    when: alacritty_check.rc != 0

  - name: Create alacritty config folder if not exist
    ansible.builtin.file:
      path: "~/.config/alacritty" 
      state: directory
      mode: '0700'

  - name: Copy alacritty config
    ansible.builtin.copy:
      src: "configs/{{os_family}}/alacritty.toml"
      dest: "~/.config/alacritty/alacritty.toml"
      mode: '0664'

  # ----------- Setup tmux -----------
  
